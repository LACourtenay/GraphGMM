% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tsne_plot.R
\name{tsne_plot}
\alias{tsne_plot}
\title{t-Distributed Stochastic Neighbour Embedding}
\usage{
tsne_plot(
  data,
  labels = NULL,
  n_iterations = 1000,
  perplexity = 0,
  label_colours = NULL,
  point_size = 2,
  CI_ellipse = FALSE,
  CI_level = 0.95,
  CI_size = 1,
  Chull = FALSE,
  Ch_size = 1,
  main = NULL
)
}
\arguments{
\item{data}{A \code{data.frame} containing the information to plot}

\item{labels}{A factorial list containing the sample labels}

\item{n_iterations}{An integer defining the number of iterations to be performed}

\item{perplexity}{A numeric value defining the perplexity hyperparameter. The
default is set to the sample size to the power of 1/2.}

\item{label_colours}{A string vector of colours to be used in the plot.}

\item{point_size}{A numeric value defining the siz eof plot points}

\item{CI_ellipse}{A boolean specifying whether Confidence Ellipses are to be
included}

\item{CI_level}{A numeric value between 0 and 1 defining the % of confidence
for CI ellipses}

\item{CI_size}{A numeric value defining the thikness of CI ellipses lines}

\item{Chull}{A boolean specifying whether convex hulls are to be included}

\item{Ch_size}{A numeric value defining the thickness of Convex Hull lines}

\item{main}{A string specifying the plot title (if included)}
}
\value{
\code{tSNE_scores} - The 2 dimensional tSNE scores.

\code{tSNE_plot} - a ggplot object containing the tSNE plot
}
\description{
This function calculates and plots the results of a tSNE, a non-linear
dimensionality reduction algorithm.
}
\section{Note}{

tSNE is a computationally expensive algorithm, and does not work well (if at all) on
similarity matrices. t-SNE should therefore be used on landmark embeddings or directly
on landmark coordinates.
}

\section{Bibliography}{

Hinton, G.E.; Roweis, S.T. (2003) Stochastic Neighbor Embedding, Advances in Neural
Information Processing Systems. 857-864
}

\examples{
library(shapes)
library(GraphGMM)

# load data
data(apes)

# Generalized Procrustes Fit
GPAshape <- GPA(apes$x)
data <- vector_from_landmarks(GPAshape$coordinates)

# plot pca

tsne_plot(data, apes$group, CI_ellipse = TRUE)

}
\seealso{
\code{\link[Rtsne]{Rtsne}} of the \code{Rtsne} library,
}
