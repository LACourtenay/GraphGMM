% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_lmgraph_stats.R
\name{plot_lmgraph_stats}
\alias{plot_lmgraph_stats}
\title{Calculate Graph Configuration Statistics}
\usage{
plot_lmgraph_stats(
  target_central,
  variable,
  scale_factor = 1,
  log_values = FALSE,
  colour_grad = FALSE,
  colour_values = c("black", "red"),
  n_col_ranks = 10,
  surface = NULL
)
}
\arguments{
\item{target_central}{A (landmark x dimension) matrix containing the central landmark
configuration the user wishes to analyse}

\item{variable}{A vector containing the variables to be visualized, as extracted
from \code{\link{graph_configuration_statistics}}}

\item{scale_factor}{A numeric value defining how to scale the statistical
metrics}

\item{log_values}{A boolean variable defining whether the log function of
statistical variables should be calculated.}

\item{colour_grad}{A boolean variable defining whether visualisations should
include colour gradients as well.}

\item{colour_values}{A vector defining two colours that will be used to calculate
the colour gradients.}

\item{n_col_ranks}{A numeric value defining the number of levels in the colour
gradients.}

\item{surface}{A 3D surface model (ASCII .ply file) containing the surface the user
wishes to plot the landmarks on (note colour_grad is ignored if a surface is provided)}
}
\value{
A visualisation of the landmark graph
}
\description{
This function can be used to visualise the calculated properties of a given landmark graph.
}
\examples{
library(shapes)
library(GraphGMM)

# load data
data(apes)

# Generalized Procrustes Fit
GPAshape <- GPA(apes$x)

# separate the samples under analysis

female_gorilla <- separate_samples(GPAshape$coordinates,
                                   apes$group,
                                   "gorf")
male_gorilla <- separate_samples(GPAshape$coordinates,
                                 apes$group,
                                 "gorm")

female_central <- calc_central_morph(female_gorilla)
male_central <- calc_central_morph(male_gorilla)

# calculate edges

female_edges <- knn_graph(female_central, k = 3, radius = 75)
male_edges <- knn_graph(male_central, k = 3, radius = 75)
female_edges <- as_edge_list(female_edges)
male_edges <- as_edge_list(male_edges)

# Graph configuration statistics

female_results <- graph_configuration_statistics(female_central, female_edges)
male_results <- graph_configuration_statistics(male_central, male_edges)

# Visualise results

plot_lmgraph_stats(female_central, female_results$landmark_degree,
                   colour_values = c("red","blue"),
                   n_col_ranks = 5)
plot_lmgraph_stats(female_central, female_results$landmark_eigenvalues,
                   scale = 5,
                   colour_values = c("red","blue"),
                   n_col_ranks = 5)
plot_lmgraph_stats(female_central, female_results$landmark_betweenness,
                   scale = 0.5,
                   colour_values = c("red","blue"),
                   n_col_ranks = 5)

plot_lmgraph_stats(male_central, female_results$landmark_degree,
                   colour_values = c("red","blue"),
                   n_col_ranks = 5)
plot_lmgraph_stats(male_central, female_results$landmark_eigenvalues,
                   scale = 5,
                   colour_values = c("red","blue"),
                   n_col_ranks = 5)
plot_lmgraph_stats(male_central, female_results$landmark_betweenness,
                   scale = 0.5,
                   colour_values = c("red","blue"),
                   n_col_ranks = 5)

}
\seealso{
\code{\link{separate_samples}}, \code{\link{graph_configuration_statistics}}
}
