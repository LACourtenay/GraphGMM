% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graph_configuration_statistics.R
\name{graph_configuration_statistics}
\alias{graph_configuration_statistics}
\title{Calculate Graph Configuration Statistics}
\usage{
graph_configuration_statistics(target_central, target_edges, plot = TRUE)
}
\arguments{
\item{target_central}{A (landmark x dimension) matrix containing the central landmark
configuration the user wishes to analyse}

\item{target_edges}{An edge list that defines the graph, using
\code{\link{as_edge_list}}}

\item{plot}{A boolean variable defining whether to plot a histogram of the results}
}
\value{
\code{graph_clustering_coe} - The graph clustering coefficient

\code{graph_density} - The density of edges in the graph

\code{landmark_degree} - A list of degree values corresponding to each landmark,
indicating the number of connections a landmark has with other landmarks

\code{landmark_eigenvalues} - A list of landmark centrality values according to
their eigenvalues, identifying landmarks that are important in the global
context of the entire landmark configuration

\code{landmark_betweenness} - A list of landmark centrality values according to
their 'betweenness' (the number of times a landmark acts as a bridge to other landmarks
within the configuration).
}
\description{
This function can be used to calculate the properties of a given landmark graph.
}
\section{Details}{

The objective of this function is to calculate a set of graph-theory based statistics
that can be used to describe landmark configurations. This function calculates the
overall density of the graph as well as its transitivity - how well the landmarks are
connected among themselves - as well as landmark centrality values - how important a
landmark is in the general context of the landmark configuration.
}

\examples{
library(shapes)
library(GraphGMM)

# load data
data(apes)

# Generalized Procrustes Fit
GPAshape <- GPA(apes$x)

# separate the samples under analysis

female_gorilla <- separate_samples(GPAshape$coordinates,
                                   apes$group,
                                   "gorf")
male_gorilla <- separate_samples(GPAshape$coordinates,
                                 apes$group,
                                 "gorm")

female_central <- calc_central_morph(female_gorilla)
male_central <- calc_central_morph(male_gorilla)

# calculate edges

female_edges <- knn_graph(female_central, k = 3, radius = 75)
male_edges <- knn_graph(male_central, k = 3, radius = 75)
female_edges <- as_edge_list(female_edges)
male_edges <- as_edge_list(male_edges)

# Graph configuration statistics

graph_configuration_statistics(female_central, female_edges)
graph_configuration_statistics(male_central, male_edges)

}
\seealso{
From the present library; \code{\link{separate_samples}}, \code{\link{plot_lmgraph_stats}}

From the \code{igraph} library; \code{\link[igraph]{edge_density}},
\code{\link[igraph]{transitivity}}, \code{\link[igraph]{centr_degree}},
\code{\link[igraph]{centr_betw}}, \code{\link[igraph]{centr_eigen}}
}
